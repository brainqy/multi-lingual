name: Playwright Tests

on:
  push:
    branches: [ integration ]
  pull_request:
    branches: [ integration ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate
        env:
          DATABASE_URL: "postgresql://testuser:testpassword@localhost:5432/testdb?schema=public"

      - name: Initialize and Seed Database
        run: npx prisma db push --force-reset && npx prisma db seed
        env:
          DATABASE_URL: "postgresql://testuser:testpassword@localhost:5432/testdb?schema=public"

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test
        env:
          DATABASE_URL: "postgresql://testuser:testpassword@localhost:5432/testdb?schema=public"

      - name: Upload Playwright report (if tests fail)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
